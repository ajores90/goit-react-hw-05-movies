{"version":3,"file":"static/js/0.56c83237.chunk.js","mappings":"gRAEaA,EAAYC,EAAAA,EAAAA,IAAH,mFAMTC,EAAWD,EAAAA,EAAAA,GAAH,gHAQRE,EAAWF,EAAAA,EAAAA,GAAH,8GAORG,EAAeH,EAAAA,EAAAA,IAAH,+CAIZI,EAAYJ,EAAAA,EAAAA,EAAH,qFAMTK,EAAgBL,EAAAA,EAAAA,EAAH,4D,mFC6B1B,EAvDa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,IAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,4FACA,mCACVC,EAFU,6CAEkCJ,EAFlC,4BACA,oCADA,kBAKSK,EAAAA,EAAAA,IAAUD,GALnB,OAKRE,EALQ,OAMdT,EAAQS,EAASC,KAAKX,MACtBG,GAAW,GAPG,kDASdS,QAAQC,MAAM,6BAAd,MACAV,GAAW,GAVG,0DAAH,qDAcfI,GACD,GAAE,CAACH,IAEAF,EACF,OAAO,SAACY,EAAA,EAAD,IAKT,OACE,SAACtB,EAAD,WACE,SAACE,EAAD,UACGM,EAAKe,KAAI,SAAAC,GACR,IAAMC,EAAaD,EAAME,aANV,kCAOMF,EAAME,aACvBC,EACJ,OACE,UAACxB,EAAD,YACE,SAACC,EAAD,CACEwB,IAAKH,EACLI,IAAG,UAAKL,EAAMM,KAAX,YACHC,MAAM,SAER,4BACE,UAAC1B,EAAD,qBAAmBmB,EAAMM,SACzB,UAACxB,EAAD,yBAA2BkB,EAAMQ,kBARrC,UAAkBR,EAAMS,GAAxB,YAA8BT,EAAMM,KAApC,YAA4CN,EAAMQ,WAYrD,OAIR,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2rem;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 150px;\n`;\n\nexport const ProfileImage = styled.img`\n  border-radius: 5px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 1rem;\n  font-weight: bold;\n  margin: 1rem 0;\n`;\n\nexport const CharacterName = styled.p`\n  font-size: 1rem;\n  color: #666;\n`;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, CastList, CastItem, ProfileImage, ActorName, CharacterName } from './Cast.styled';\nimport { useParams } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport fallbackProfile from '../../images/no_image.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const API_KEY = '48f720fbe71ad73e8e057438acdbaed5';\n      const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;\n\n      try {\n        const response = await axios.get(url);\n        setCast(response.data.cast);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const profileBaseUrl = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <Container>\n      <CastList>\n        {cast.map(actor => {\n          const profileUrl = actor.profile_path\n            ? profileBaseUrl + actor.profile_path\n            : fallbackProfile;\n          return (\n            <CastItem key={`${actor.id}-${actor.name}-${actor.character}`}>\n              <ProfileImage\n                src={profileUrl}\n                alt={`${actor.name} profile`}\n                width=\"150\"\n              />\n              <div>\n                <ActorName>Actor: {actor.name}</ActorName>\n                <CharacterName>Character: {actor.character}</CharacterName>\n              </div>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </Container>\n  );\n};\n\nexport default Cast;\n"],"names":["Container","styled","CastList","CastItem","ProfileImage","ActorName","CharacterName","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","fetchCast","url","axios","response","data","console","error","Loading","map","actor","profileUrl","profile_path","fallbackProfile","src","alt","name","width","character","id"],"sourceRoot":""}