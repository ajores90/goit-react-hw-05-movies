{"version":3,"file":"static/js/387.f99c891f.chunk.js","mappings":"gRAEaA,EAAYC,EAAAA,EAAAA,IAAH,mFAMTC,EAAaD,EAAAA,EAAAA,GAAH,4DAKVE,EAAaF,EAAAA,EAAAA,GAAH,4EAKVG,EAASH,EAAAA,EAAAA,GAAH,sEAKNI,EAAUJ,EAAAA,EAAAA,EAAH,iE,6BC4BpB,EA7CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,4FACH,mCACVC,EAFa,6CAE+BJ,EAF/B,4BACH,oCADG,kBAKMK,EAAAA,EAAAA,IAAUD,GALhB,OAKXE,EALW,OAMjBT,EAAWS,EAASC,KAAKC,SACzBT,GAAW,GAPM,kDASjBU,QAAQC,MAAM,gCAAd,MACAX,GAAW,GAVM,0DAAH,qDAclBI,GACD,GAAE,CAACH,IAEAF,GACK,SAACa,EAAA,EAAD,IAGc,IAAnBf,EAAQgB,QACH,SAAClB,EAAD,yDAIP,SAACL,EAAD,WACE,SAACE,EAAD,UACGK,EAAQiB,KAAI,SAAAC,GAAM,OACjB,UAACtB,EAAD,YACE,SAACC,EAAD,UAASqB,EAAOC,UAChB,SAACrB,EAAD,UAAUoB,EAAOE,YAFFF,EAAOG,GADP,OAS1B,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 1rem;\n  border-bottom: 1px solid #eee;\n`;\n\nexport const Author = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n`;\n\nexport const Content = styled.p`\n  font-size: 1rem;\n  line-height: 1.6;\n`;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ReviewList, ReviewItem, Author, Content } from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const API_KEY = '48f720fbe71ad73e8e057438acdbaed5';\n      const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n\n      try {\n        const response = await axios.get(url);\n        setReviews(response.data.results);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (reviews.length === 0) {\n    return <Content>We don't have any reviews for this movie.</Content>;\n  }\n\n  return (\n    <Container>\n      <ReviewList>\n        {reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <Author>{review.author}</Author>\n            <Content>{review.content}</Content>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </Container>\n  );\n};\n\nexport default Reviews;\n"],"names":["Container","styled","ReviewList","ReviewItem","Author","Content","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","fetchReviews","url","axios","response","data","results","console","error","Loading","length","map","review","author","content","id"],"sourceRoot":""}