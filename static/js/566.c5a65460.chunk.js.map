{"version":3,"file":"static/js/566.c5a65460.chunk.js","mappings":"wSAGaA,EAAYC,EAAAA,EAAAA,IAAH,mFAMTC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,4KAWRG,EAAQH,EAAAA,EAAAA,GAAH,8DAKLI,EAASJ,EAAAA,EAAAA,IAAH,+CAINK,EAAQL,EAAAA,EAAAA,EAAH,8CAILM,EAAgBN,EAAAA,EAAAA,EAAH,oEAKbO,EAAWP,EAAAA,EAAAA,EAAH,iEAKRQ,EAAcR,EAAAA,EAAAA,EAAH,oEAKXS,EAAaT,EAAAA,EAAAA,GAAH,0EAMVU,EAAYV,EAAAA,EAAAA,GAAH,mEAKTW,EAAsBX,EAAAA,EAAAA,GAAH,wEAKnBY,GAAqBZ,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2K,oFC4B/B,EAxEqB,WAAO,IAAD,IACzB,GAAwCa,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAoBhD,IAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,4FACR,mCACVC,EAFkB,6CAE0BV,EAF1B,oBACR,oCADQ,kBAKCW,EAAAA,EAAAA,IAAUD,GALX,OAKhBE,EALgB,OAMtBf,EAAgBe,EAASC,MACzBd,GAAW,GAPW,kDAStBe,QAAQC,MAAM,gCAAd,MACAhB,GAAW,GAVW,0DAAH,qDAcvBU,GACD,GAAE,CAACT,IAEAF,EACF,OACE,0BACE,SAACkB,EAAA,EAAD,MAKN,IAEMC,EAAYrB,EAAasB,YAFT,kCAGFtB,EAAasB,YAC7BC,EAEJ,OACE,UAACtC,EAAD,YACE,SAACE,EAAD,CAAUqC,GAAIhB,EAASiB,QAAvB,sBACA,UAACpC,EAAD,WACGW,EAAa0B,MADhB,KACyB1B,EAAa2B,aAAaC,MAAM,EAAG,GAD5D,QAGA,SAACtC,EAAD,CACEuC,IAAKR,EACLS,IAAG,UAAK9B,EAAa0B,MAAlB,WACHK,MAAM,SAER,UAACxC,EAAD,0BAAoByC,KAAKC,MAAkC,GAA5BjC,EAAakC,cAA5C,QACA,SAAC1C,EAAD,yBACA,SAACC,EAAD,UAAWO,EAAamC,YACxB,SAACzC,EAAD,uBACA,SAACC,EAAD,UACGK,EAAaoC,OAAOC,KAAI,SAAAC,GAAK,OAC5B,SAAC1C,EAAD,UAA2B0C,EAAMC,MAAjBD,EAAME,GADM,OAIhC,4BACE,SAAC3C,EAAD,sCACA,SAACC,EAAD,CAAoB0B,GAAG,OAAvB,mBACA,SAAC1B,EAAD,CAAoB0B,GAAG,UAAvB,sBACA,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACtB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  margin-bottom: 1rem;\n  text-decoration: none;\n  color: #007bff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n`;\n\nexport const Score = styled.p`\n  font-size: 1.2rem;\n`;\n\nexport const OverviewTitle = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\n\nexport const Overview = styled.p`\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const GenreItem = styled.li`\n  display: inline;\n  margin-right: 10px;\n`;\n\nexport const AdditionalInfoTitle = styled.h4`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  display: inline-block;\n  margin-right: 1rem;\n  text-decoration: none;\n  color: #007bff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React, { useState, useEffect, useRef, Suspense } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  BackLink,\n  Title,\n  Poster,\n  Score,\n  OverviewTitle,\n  Overview,\n  GenresTitle,\n  GenresList,\n  GenreItem,\n  AdditionalInfoTitle,\n  AdditionalInfoLink,\n} from './MovieDetails.styled';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport fallbackPoster from '../../images/no_poster.png';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const API_KEY = '48f720fbe71ad73e8e057438acdbaed5';\n      const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;\n\n      try {\n        const response = await axios.get(url);\n        setMovieDetails(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (loading) {\n    return (\n      <div>\n        <Loading />\n      </div>\n    );\n  }\n\n  const posterBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n  const posterUrl = movieDetails.poster_path\n    ? posterBaseUrl + movieDetails.poster_path\n    : fallbackPoster;\n\n  return (\n    <Container>\n      <BackLink to={backLink.current}>Go back</BackLink>\n      <Title>\n        {movieDetails.title} ({movieDetails.release_date.slice(0, 4)})\n      </Title>\n      <Poster\n        src={posterUrl}\n        alt={`${movieDetails.title} poster`}\n        width=\"300\"\n      />\n      <Score>User Score: {Math.round(movieDetails.vote_average * 10)}%</Score>\n      <OverviewTitle>Overview:</OverviewTitle>\n      <Overview>{movieDetails.overview}</Overview>\n      <GenresTitle>Genres:</GenresTitle>\n      <GenresList>\n        {movieDetails.genres.map(genre => (\n          <GenreItem key={genre.id}>{genre.name}</GenreItem>\n        ))}\n      </GenresList>\n      <div>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n        <AdditionalInfoLink to=\"reviews\">Reviews</AdditionalInfoLink>\n        <Suspense fallback={<Loading />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","BackLink","Link","Title","Poster","Score","OverviewTitle","Overview","GenresTitle","GenresList","GenreItem","AdditionalInfoTitle","AdditionalInfoLink","useState","movieDetails","setMovieDetails","loading","setLoading","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","url","axios","response","data","console","error","Loading","posterUrl","poster_path","fallbackPoster","to","current","title","release_date","slice","src","alt","width","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}