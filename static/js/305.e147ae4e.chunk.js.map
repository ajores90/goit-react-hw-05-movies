{"version":3,"file":"static/js/305.e147ae4e.chunk.js","mappings":"gSAGaA,EAAYC,EAAAA,EAAAA,IAAH,mFAMTC,EAAQD,EAAAA,EAAAA,GAAH,6GAOLE,EAAOF,EAAAA,EAAAA,KAAH,8FAMJG,EAAQH,EAAAA,EAAAA,MAAH,qIAQLI,EAASJ,EAAAA,EAAAA,OAAH,qPAeNK,EAAYL,EAAAA,EAAAA,GAAH,gHAQTM,EAAYN,EAAAA,EAAAA,GAAH,2KAQTO,GAAYP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,gJ,4BCiBtB,EApEmB,WACjB,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeJ,EAAaK,IAAI,SAElCD,GACFE,EAAYF,EAEf,GAAE,CAACJ,IAEJ,IAAMM,EAAW,mCAAG,WAAMC,GAAN,gFAClBX,GAAW,GACK,mCACVY,EAHY,4DAEF,mCAFE,kBAGgED,GAHhE,kBAMOE,EAAAA,EAAAA,IAAUD,GANjB,OAMVE,EANU,OAOhBhB,EAAUgB,EAASC,KAAKC,SACxBhB,GAAW,GARK,kDAUhBiB,QAAQC,MAAM,yBAAd,MACAlB,GAAW,GAXK,0DAAH,sDAwBjB,OACE,UAAChB,EAAD,YACE,SAACE,EAAD,4BACA,UAACC,EAAD,CAAMgC,SARW,SAAAC,GACnBA,EAAMC,iBACNpB,EAAS,iBAAD,OAAkBN,GAC3B,EAKG,WACE,SAACP,EAAD,CACEkC,KAAK,OACLC,MAAO5B,EACP6B,SAhBa,SAAAJ,GACnBxB,EAAewB,EAAMK,OAAOF,MAC7B,EAeOG,YAAY,iCAEd,SAACrC,EAAD,CAAQiC,KAAK,SAAb,uBAGDvB,IAAW,SAAC4B,EAAA,EAAD,KAEZ,SAACrC,EAAD,UACGO,EAAO+B,KAAI,SAAAC,GAAK,OACf,SAACtC,EAAD,WACE,SAACC,EAAD,CAAWsC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM5B,GAA7C,SACGwB,EAAMK,SAFKL,EAAME,GADP,QAUxB,C","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 2.5rem;\n  color: #333;\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n`;\n\nexport const Input = styled.input`\n  flex-grow: 1;\n  font-size: 1rem;\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: #fff;\n  font-size: 1rem;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  margin-left: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MovieItem = styled.li`\n  flex: 0 0 calc(33.333% - 20px);\n  margin: 10px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: #333;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Title, Form, Input, Button, MovieList, MovieItem, MovieLink } from './MoviesPage.styled';\nimport {\n  useNavigate,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\n\nconst MoviesPage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n\n    if (currentQuery) {\n      fetchMovies(currentQuery);\n    }\n  }, [searchParams]);\n\n  const fetchMovies = async query => {\n    setLoading(true);\n    const API_KEY = '48f720fbe71ad73e8e057438acdbaed5';\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n\n    try {\n      const response = await axios.get(url);\n      setMovies(response.data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    navigate(`/movies?query=${searchQuery}`);\n  };\n\n  return (\n    <Container>\n      <Title>Movie search</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleChange}\n          placeholder=\"Enter the name of the movie\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      {loading && <Loading />}\n\n      <MovieList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <MovieLink to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Container","styled","Title","Form","Input","Button","MovieList","MovieItem","MovieLink","Link","useState","searchQuery","setSearchQuery","movies","setMovies","loading","setLoading","navigate","useNavigate","useSearchParams","searchParams","location","useLocation","useEffect","currentQuery","get","fetchMovies","query","url","axios","response","data","results","console","error","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","Loading","map","movie","to","id","state","from","title"],"sourceRoot":""}